LIBVNA: Vector Network Analyzer Library
Copyright Â© 2020, 2021 D Scott Guthridge <scott-guthridge@rompromity.net>

Library for electrical vector network analyzers.  The library provides
functions for 12-error parameter (and other) VNA calibration, generalized
conversions between network parameter types, and loading and saving
network parameter data in Touchstone 1, Touchstone 2 and a native format.
Refer to the provided manual pages and examples.

Prerequisites:
    - You'll need a C99 level C compiler such as gcc or clang.

    - You'll need to install the libyaml development package:

	Fedora, RedHat, Centos
	    sudo yum install libyaml-devel

	Debian, Ubuntu
	    sudo apt-get install libyaml-dev

	If all else fails, download and build from source:
	    https://pyyaml.org/wiki/LibYAML


Build, Test and Install:
    ./bootstrap		# If building from git; skip if building from tarball.
    ./configure
    make
    make check
    sudo make install

    The files are installed in /usr/local/ 
	/usr/local/include/*.h
	/usr/local/lib/libvna.so.*
	/usr/local/share/doc/libvna/*
	/usr/local/share/man/man3/*.3

    The example programs and README-EXAMPLES files are copied into
    /usr/local/share/doc/libvna.  The README-EXAMPLES is worded for
    someone building the example programs by hand after the library
    has been installed on the system.  After running a make all here,
    though the examples will already be built in the src/ directory.


If you have gnuplot installed, you can see an interesting example of
VNA calibration at work by running:
    make plot


Fixing library path problems:
    Some Linux distros (such as Fedora 31) don't include /usr/local/lib
    in the default dyanamic library search path.  If you get an error like
    the following when trying to run a program you linked against libvna:

	error while loading shared libraries: libvna.so.0: cannot open
	shared object file: No such file or directory

    Add /usr/local/lib to the default library search path:

    	sudo sh -c 'echo "/usr/local/lib" >> /etc/ld.so.conf.d/local.conf'
	sudo chmod 644 /etc/ld.so.conf.d/local.conf
	sudo ldconfig


To build PDF versions of the man pages (requries pdfroff):
    make pdfman

    The .pdf files appear in src/


To build RPM files:
    make srcrpm
    make rpms

    The source RPM appears in rpm/libvna-*.src.rpm.  Binary RPMs appear
    in an architecture-specific subdirectory, e.g. rpm/x86-64/.

    When installing from RPM, the installed files go into the normal
    system directories such as /usr/include, /usr/lib64, /usr/share/doc,
    and /usr/share/man instead of /usr/local/


Creating a new release (for git developers only)
    Update the version in the AC_INIT macro of configure.ac
    Commit with a message in this format "version 0.0.3"
    Create an annotated tag.  Example:
	git tag -a v0.0.3 -m "v0.0.3"
    Push to github
	git push --tags


The library is still undergoing some final development.  While the
version remains at 0.0.x, there may be a few compatiblity breaks not
reflected in the library .so version.

If you'd like to help, please contact me.  The main things I could use
help on right now are:

    - A review of the API
    	- Does it make sense?  Is it the right abstraction?
	- Does it allow for future extensions without breaking binary
	  compatibility.
	- What's missing?

    - A review of the code (almost 24000 lines of C99 code)

Finally, please make suggestions for how the library could be improved.

